CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(MCPROXY)
SET(CMAKE_C_FLAGS "-g -O2 -fPIC -pipe -Wall")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
INCLUDE_DIRECTORIES(${MCPROXY_SOURCE_DIR}/include)

OPTION(MCPROXY_NAMED_SEMAPHORES "Use named semaphores regardless of platform" OFF)
OPTION(MCPROXY_HANDLERS_STATIC "Compile handlers as static libraries" OFF)
OPTION(MCPROXY_LIBAPI_STATIC "Compile libproxyapi as a static library" OFF)
SET(MCPROXY_EMBED_HANDLER "" CACHE STRING "Embedded handler library for non-modular mode")

IF(MCPROXY_NAMED_SEMAPHORES)
  ADD_DEFINITIONS(-DMCPROXY_USE_NAMED_SEMAPHORES)
ENDIF(MCPROXY_NAMED_SEMAPHORES)

IF(NOT MCPROXY_EMBED_HANDLER EQUAL "")
  SET(MCPROXY_HANDLERS_STATIC ON)
ENDIF(NOT MCPROXY_EMBED_HANDLER EQUAL "")

IF(MCPROXY_LIBAPI_STATIC)
  SET(PROXYAPI_MODE STATIC)
ELSE(MCPROXY_LIBAPI_STATIC)
  SET(PROXYAPI_MODE SHARED)
ENDIF(MCPROXY_LIBAPI_STATIC)

IF(MCPROXY_HANDLERS_STATIC)
  SET(HANDLER_MODE STATIC)
ELSE(MCPROXY_HANDLERS_STATIC)
  SET(HANDLER_MODE SHARED)
ENDIF(MCPROXY_HANDLERS_STATIC)

ADD_LIBRARY(mcproxyapi ${PROXYAPI_MODE} src/system.c src/network.c src/proto.c src/msgtable.c src/proxy.c src/util.c src/mm.c src/thread.c src/log.c)
ADD_EXECUTABLE(mcproxy src/main.c src/core.c)

IF(DEFINED APPLE)
  SET(OSX_LIBRARIES iconv)
  ADD_DEFINITIONS(-DMCPROXY_USE_NAMED_SEMAPHORES)
ENDIF(DEFINED APPLE)
TARGET_LINK_LIBRARIES(mcproxy mcproxyapi ${MCPROXY_EMBED_HANDLER} dl m pthread ${OSX_LIBRARIES})

ADD_SUBDIRECTORY(handlers/noop)
ADD_SUBDIRECTORY(handlers/namechange)
ADD_SUBDIRECTORY(handlers/serverlog)
